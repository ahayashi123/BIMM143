---
title: "mini-project"
author: "Alyssa Hayashi"
format: pdf
---
##Preparing the data 

```{r}
# Save your input data file into your Project directory
fna.data <- "https://bioboot.github.io/bimm143_S20/class-material/WisconsinCancer.csv"

# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv(fna.data, row.names=1)

```

```{r}
View(wisc.df)
```

```{r}
# We can use -1 here to remove the first column
wisc.data <- wisc.df[,-1]
```

```{r}
# Create diagnosis vector for later 
diagnosis <- as.factor(wisc.df$diagnosis )
```

## Exploratory data analysis 

Q1. How many observations are in this dataset?
Q2. How many of the observations have a malignant diagnosis?
Q3. How many variables/features in the data are suffixed with _mean?
```{r}
Q1 <- nrow(wisc.df)
Q1
Q2 <- sum(wisc.df$diagnosis=="M")
Q2

mean_variables <- grep("_mean$", colnames(wisc.df))
num_mean_variables <- length(mean_variables)
num_mean_variables
```

##Principle Component Analysis

```{r}
# Check column means and standard deviations
colMeans(wisc.data)

apply(wisc.data,2,sd)
```

```{r}
# Check column means
means <- colMeans(wisc.data)
cat("Column Means:\n")
print(means)

# Check column standard deviations
sds <- apply(wisc.data, 2, sd)
cat("\nColumn Standard Deviations:\n")
print(sds)

```

```{r}
# Perform PCA on wisc.data by completing the following code
# Scale parameter is set to TRUE to scale the variables
wisc.pr <- prcomp( wisc.data, scale. = T )
```

```{r}
# Look at summary of results
summary(wisc.pr)
```

Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?
  A:44.27%
Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?
  A:3 PCs
Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?
  A:7 PCs
  
  ## Interpreting PCA results
  
  Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?
  A:there is too much going on and is hard to understand what's going on. we will need to make our own to make sense of the pca results
  
```{r}
biplot(wisc.pr)
```
  
```{r}
# Scatter plot observations by components 1 and 2
plot( wisc.pr$x , col = diagnosis , 
     xlab = "PC1", ylab = "PC2")
```
  
  Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?
  
```{r}
# Repeat for components 1 and 3
plot(wisc.pr$x[, c(1,3)], col = as.integer(diagnosis), 
     xlab = "PC1", ylab = "PC3")
```
  
  A: Both plots have very similar distributions with both having the majority of the points being centered around 0. However the scales are different
  
```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()
```
  
 ##Variance explained
 
```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```
 
```{r}
# Variance explained by each principal component: pve
pve <- wisc.pr$sdev^2 / sum(wisc.pr$sdev^2)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```
 
```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```
 
 ## Communicating PCA results 
 
Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?
  A: it takes the loading for the feature concave.points_mean in PC1
Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?
  A: 5 PCs are required to explain 80% of the variance

```{r}
wisc.pr$rotation["concave.points_mean", 1]
cumulative_variance <- cumsum(pve)
which(cumulative_variance >= 0.8)[1]
```

## 3. Hierarchical Clustering 

```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
```

```{r}
data.dist <- dist(data.scaled)
```

```{r}
wisc.hclust <- hclust(data.dist, method="complete")
```

## Results of hierarchical clustering 

Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?
  around 18-19?


```{r}
plot(wisc.hclust)
abline(h=19, col="red", lty=2)
```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k =4)
table(wisc.hclust.clusters, diagnosis)
```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k =2)
table(wisc.hclust.clusters, diagnosis)
```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k =10)
table(wisc.hclust.clusters, diagnosis)
```

##Using different methods 

```{r}
wisc.hclust <- hclust(data.dist, method="single")
plot(wisc.hclust)
abline(h=19, col="red", lty=2)
```

```{r}
wisc.hclust <- hclust(data.dist, method="average")
plot(wisc.hclust)
abline(h=19, col="red", lty=2)
```

```{r}
wisc.hclust <- hclust(data.dist, method="ward.D2")
plot(wisc.hclust)
abline(h=19, col="red", lty=2)
```

Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.
A: My favorite is ward.D2 since it minimizes variance in the clustering. 

```{r}
cumulative_variance<- cumsum(pve)
min_components_90<-which(cumulative_variance>=.9)[1]
wisc.pr_reduced<- wisc.pr$x[, 1:min_components_90]
wisc.pr.hclust <- hclust(dist(wisc.pr_reduced), method="ward.D2")
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
```

```{r}
table(grps, diagnosis)
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```

```{r}
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
```

Q15. How well does the newly created model with four clusters separate out the two diagnoses?

```{r}
# Compare to actual diagnoses
table(wisc.pr.hclust.clusters, diagnosis)
```

Q16. How well do the k-means and hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.

```{r}

table(wisc.hclust.clusters, diagnosis)
```

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

Q18. Which of these new patients should we prioritize for follow up based on your results?

1